AR = '/usr/bin/ar'
ARFLAGS = 'rcs'
BINDIR = '/home/hong/expertn50/built/bin'
CC = ['/usr/bin/gcc']
CCLNK_SRC_F = []
CCLNK_TGT_F = ['-o']
CC_NAME = 'gcc'
CC_SRC_F = []
CC_TGT_F = ['-c', '-o']
CC_VERSION = ('9', '3', '0')
CFLAGS = ['-Wall', '-fPIC', '-g', '-O0']
CFLAGS_GMODULE = ['-pthread', '-pthread', '-pthread', '-pthread']
CFLAGS_M = ['-Wall']
CFLAGS_MACBUNDLE = ['-fPIC']
CFLAGS_OPEN_MP = ['-fopenmp']
CFLAGS_cshlib = ['-fPIC']
COMPILER_CC = 'gcc'
COMPILER_CXX = 'g++'
CPPPATH_ST = '-I%s'
CXX = ['/usr/bin/g++']
CXXFLAGS = ['-Wall', '-fPIC', '-g', '-O0']
CXXFLAGS_GMODULE = ['-pthread', '-pthread', '-pthread', '-pthread']
CXXFLAGS_MACBUNDLE = ['-fPIC']
CXXFLAGS_cxxshlib = ['-fPIC']
CXXLNK_SRC_F = []
CXXLNK_TGT_F = ['-o']
CXX_NAME = 'gcc'
CXX_SRC_F = []
CXX_TGT_F = ['-c', '-o']
DEFINES = ['HAVE_GLIB=1', 'HAVE_GOBJECT=1', 'HAVE_GMODULE=1', 'HAVE_LIBXML2=1', 'XPN_WITHOUT_DATABASE=1', 'XPN_VERSION="5.0 Rev 0"', 'XPN_DEBUG=1', 'USE_OPENMP=1', 'HAVE_LIBNETCDF=1']
DEFINES_ST = '-D%s'
DEST_BINFMT = 'elf'
DEST_CPU = 'x86_64'
DEST_OS = 'linux'
INCLUDES_CLASS = ['../include ', '/home/hong/expertn50/dev/xpn/libexpertn_modul_base/include', '/home/hong/expertn50/dev/xpn/libexpertn_class/include', '.']
INCLUDES_GLIB = ['/usr/include/glib-2.0', '/usr/lib/x86_64-linux-gnu/glib-2.0/include']
INCLUDES_GMODULE = ['/usr/include/glib-2.0', '/usr/lib/x86_64-linux-gnu/glib-2.0/include']
INCLUDES_GOBJECT = ['/usr/include/glib-2.0', '/usr/lib/x86_64-linux-gnu/glib-2.0/include']
INCLUDES_LIBNETCDF = ['/usr/include/hdf5/serial']
INCLUDES_LIBXML2 = ['/usr/include/libxml2']
INCLUDES_STD = ['../include ', '/home/hong/expertn50/dev/xpn/libexpertn_modul_base/include', '.']
INSTALL_BIN = '/home/hong/expertn50/built/bin'
INSTALL_CFG = '/home/hong/expertn50/built/cfg'
INSTALL_CFG_SYSTEM = '/home/hong/expertn50/built/cfg_system'
INSTALL_CFG_TEMPLATE = '/home/hong/expertn50/built/cfg_template'
INSTALL_DOC = '/home/hong/expertn50/built/doc'
INSTALL_MODELS = '/home/hong/expertn50/built/models'
LIBDIR = '/home/hong/expertn50/built/lib'
LIBPATH_ST = '-L%s'
LIB_GLIB = ['glib-2.0']
LIB_GMODULE = ['gmodule-2.0', 'glib-2.0']
LIB_GOBJECT = ['gobject-2.0', 'glib-2.0']
LIB_LIBNETCDF = ['netcdf']
LIB_LIBXML2 = ['xml2']
LIB_M = ['m']
LIB_ST = '-l%s'
LINKFLAGS_GMODULE = ['-pthread', '-Wl,--export-dynamic', '-pthread', '-pthread', '-Wl,--export-dynamic', '-pthread']
LINKFLAGS_MACBUNDLE = ['-bundle', '-undefined', 'dynamic_lookup']
LINKFLAGS_OPEN_MP = ['-fopenmp']
LINKFLAGS_cshlib = ['-shared']
LINKFLAGS_cstlib = ['-Wl,-Bstatic']
LINKFLAGS_cxxshlib = ['-shared']
LINKFLAGS_cxxstlib = ['-Wl,-Bstatic']
LINK_CC = ['/usr/bin/gcc']
LINK_CXX = ['/usr/bin/g++']
PKGCONFIG = '/usr/bin/pkg-config'
PREFIX = '/home/hong/expertn50/built'
RPATH_ST = '-Wl,-rpath,%s'
SHLIB_MARKER = '-Wl,-Bdynamic'
SONAME_ST = '-Wl,-h,%s'
STLIBPATH_ST = '-L%s'
STLIB_MARKER = '-Wl,-Bstatic'
STLIB_ST = '-l%s'
USELIB_STD = ['OPEN_MP', 'OPEN_MP', 'GLIB', 'GOBJECT', 'GMODULE', 'LIBGDA', 'LIBNETCDF', 'M']
USE_CLASS = ['expertn_modul_base', 'expertn_class']
USE_STD = 'expertn_modul_base'
cprogram_PATTERN = '%s'
cshlib_PATTERN = 'lib%s.so'
cstlib_PATTERN = 'lib%s.a'
cxxprogram_PATTERN = '%s'
cxxshlib_PATTERN = 'lib%s.so'
cxxstlib_PATTERN = 'lib%s.a'
define_key = ['HAVE_GLIB', 'HAVE_GOBJECT', 'HAVE_GMODULE', 'HAVE_LIBXML2', 'XPN_WITHOUT_DATABASE', 'XPN_VERSION', 'XPN_DEBUG', 'USE_OPENMP', 'HAVE_LIBNETCDF']
macbundle_PATTERN = '%s.bundle'
project_list = ['xpn/libexpertn_modul_base/src', 'xpn/libexpertn_class/src', 'xpn/expertn_bin/src', 'xpn/modul/libexpertn_database/src', 'xpn/modul/libagroforestry/src', 'xpn/modul/libbalance/src', 'xpn/modul/libcentury_n/src', 'xpn/modul/libdaisy/src', 'xpn/modul/libdepos/src', 'xpn/modul/libevapotranspiration_pm/src', 'xpn/modul/libhpm/src', 'xpn/modul/libhydraulic_functions/src', 'xpn/modul/libhydrus/src', 'xpn/modul/libinterception/src', 'xpn/modul/libleachn/src', 'xpn/modul/libpedotransfer/src', 'xpn/modul/libschaaf/src', 'xpn/modul/libspass/src', 'xpn/modul/libtreemix/src', 'xpn/modul/libxpn_output/src', 'xpn/modul/libceres/src', 'xpn/modul/libpollen/src', 'xpn/modul/libdaisy_miner/src', 'xpn/modul/libschaaf_manag/src', 'xpn/modul/libgecros/src', 'xpn/modul/libmpmas_coupling/src']
